import * as ServerCore from '@var3n1k/server-core';
import * as TelegramAPI from '../../../__api.js';
export default class BaseComponent {
    // TODO: JSDoc
    Data;
    // TODO: JSDoc
    Access;
    // TODO: JSDoc
    _API;
    // TODO: JSDoc
    _Executable;
    // TODO: JSDoc
    constructor(api, data, access, executable) {
        const Validator = ServerCore.Engine.Module.Classes.Validator;
        Validator.Strict(api, new Validator().Default.Class.Instance().Required().Of(TelegramAPI.default));
        Validator.Strict(data, new Validator().Default.RegExp().Required());
        Validator.Strict(access, new Validator().Default.Object()
            .Required()
            .Exact({
            Private: new Validator().Default.Object().Required().Exact({
                Available: new Validator().Default.Boolean().Required(),
                PerUser: new Validator().Default.Function().Required(),
            }),
            Public: new Validator().Default.Object()
                .Required()
                .Exact({
                Chat: new Validator().Default.Object()
                    .Required()
                    .Exact({
                    Available: new Validator().Default.Object().Required().Exact({
                        PerChat: new Validator().Default.Function().Required(),
                    }),
                    PerUser: new Validator().Default.Function().Required(),
                }),
            }),
        }));
        Validator.Strict(executable, new Validator().Default.Object()
            .Required()
            .Exact({
            Private: new Validator().Default.Function().Required(),
            Public: new Validator().Default.Object().Required().Exact({
                Chat: new Validator().Default.Function().Required(),
            }),
        }));
        this._API = api;
        this.Data = data;
        this.Access = access;
        this._Executable = executable;
    }
}
//# sourceMappingURL=BaseComponent.js.map