import * as GlobalModule from '../module/@module.js';
export default class BaseAPI {
    // TODO: JSDoc
    __Ready;
    // TODO: JSDoc
    __Meta;
    // TODO: JSDoc
    get Log() {
        const StringManager = GlobalModule.Functions.Parameter.Type.Manager.Default.String;
        const StringStylizator = StringManager.Style;
        const StringColorModifier = StringStylizator.Modify.Color;
        const APITagText = `[${this.__Meta.Tag.Text}]`;
        const APITagColor = this.__Meta.Tag.Color;
        const ColoredAPITag = StringColorModifier.Text(APITagText, ...APITagColor);
        const ResultAPITag = ColoredAPITag;
        const AdditionalLogElements = [ResultAPITag, GlobalModule.DataSet.Dictionary.Symbol.Single.Service.Separator.Space.Default];
        const Log = {
            Custom: (_, __, ...___) => {
                const ResultLogElements = [...AdditionalLogElements, ...___];
                GlobalModule.Classes.Console.Log.Custom(_, __, ...ResultLogElements);
            },
            Preset: {
                Success: (..._) => {
                    const ResultLogElements = [...AdditionalLogElements, ..._];
                    GlobalModule.Classes.Console.Log.Preset.Success(...ResultLogElements);
                },
                Info: (..._) => {
                    const ResultLogElements = [...AdditionalLogElements, ..._];
                    GlobalModule.Classes.Console.Log.Preset.Info(...ResultLogElements);
                },
                Warn: (..._) => {
                    const ResultLogElements = [...AdditionalLogElements, ..._];
                    GlobalModule.Classes.Console.Log.Preset.Warn(...ResultLogElements);
                },
                Error: (..._) => GlobalModule.Classes.Console.Log.Preset.Error(..._),
            },
        };
        return Log;
    }
    // TODO: JSDoc
    IsReady() {
        const IsReady = this._IsReady();
        return IsReady;
    }
    // TODO: JSDoc
    constructor(meta) {
        const Validator = GlobalModule.Classes.Validator;
        Validator.Strict(meta, new Validator().Default.Object()
            .Required()
            .Exact({
            Tag: new Validator().Default.Object()
                .Required()
                .Exact({
                Text: new Validator().Default.String().Required().MinLength(1),
                Color: new Validator().Custom.Color.RGB().Required(),
            }),
        }));
        this.__Ready = false;
        this.__Meta = meta;
    }
    // TODO: JSDoc
    _SetReady(readyState) {
        const Validator = GlobalModule.Classes.Validator;
        Validator.Strict(readyState, new Validator().Default.Boolean().Required());
        this.__Ready = readyState;
    }
    // TODO: JSDoc
    _IsReady() {
        const IsReady = this.__Ready;
        return IsReady;
    }
}
//# sourceMappingURL=BaseAPI.js.map