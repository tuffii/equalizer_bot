import * as GlobalModule from '../../../../../../@module.js';
//* -------------------------------------------------------------------------
//* Realization
//* -------------------------------------------------------------------------
export default function GetValue(initialObject, propertiesPath) {
    const Validator = GlobalModule.Classes.Validator;
    Validator.Strict(initialObject, new Validator().Default.Object().Required());
    Validator.Strict(propertiesPath, new Validator().Default.Array()
        .Required()
        .Of(new Validator().Default.Symbol().Required().Or(new Validator().Default.String().Required()).Or(new Validator().Default.Numeric().Number().Required())));
    const ObjectFullPropertiesList = GlobalModule.Functions.Parameter.Type.Manager.Default.Object.GetFullProperties(initialObject, (_, __) => false);
    const CurrentObjectProperty = ObjectFullPropertiesList.find((_el, _ind, _arr) => _el.Path.join(`.`) === propertiesPath.join(`.`));
    const DoesCurrentObjectPropertyExist = Validator.TypeGuard.Default.IsObjectOfProperties(CurrentObjectProperty, [`Path`, `Value`]);
    const CurrentObjectResultProperty = DoesCurrentObjectPropertyExist ? CurrentObjectProperty.Value : undefined;
    return CurrentObjectResultProperty;
}
//# sourceMappingURL=GetValue.js.map