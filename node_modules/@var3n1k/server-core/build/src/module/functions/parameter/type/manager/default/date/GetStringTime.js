import * as GlobalModule from '../../../../../../@module.js';
//* -------------------------------------------------------------------------
//* Realization
//* -------------------------------------------------------------------------
export default function GetStringTime(initialDate = new Date(), localizeTimezoneOffset = false, useMs = false) {
    const Validator = GlobalModule.Classes.Validator;
    Validator.Strict(initialDate, new Validator().Default.Date().Required());
    Validator.Strict(localizeTimezoneOffset, new Validator().Default.Boolean().Required());
    Validator.Strict(useMs, new Validator().Default.Boolean().Required());
    // const DateValues = Functions.Parameter.Type.Manager.Default.Date.GetValues(initialDate, localizeTimezoneOffset)
    const DateHours = GlobalModule.Functions.Parameter.Type.Manager.Default.Date.GetHours(initialDate, localizeTimezoneOffset);
    const ResultDateHours = DateHours;
    const DateMinutes = GlobalModule.Functions.Parameter.Type.Manager.Default.Date.GetMinutes(initialDate, localizeTimezoneOffset);
    const ResultDateMinutes = DateMinutes;
    const DateSeconds = GlobalModule.Functions.Parameter.Type.Manager.Default.Date.GetSeconds(initialDate, localizeTimezoneOffset);
    const ResultDateSeconds = DateSeconds;
    const DateMilliseconds = GlobalModule.Functions.Parameter.Type.Manager.Default.Date.GetMilliseconds(initialDate, localizeTimezoneOffset);
    const ResultDateMilliseconds = useMs ? `.${DateMilliseconds}` : ``;
    const TimeSeparator = `:`;
    const TimeToString = `${ResultDateHours}${TimeSeparator}${ResultDateMinutes}${TimeSeparator}${ResultDateSeconds}${ResultDateMilliseconds}`;
    return TimeToString;
}
//# sourceMappingURL=GetStringTime.js.map