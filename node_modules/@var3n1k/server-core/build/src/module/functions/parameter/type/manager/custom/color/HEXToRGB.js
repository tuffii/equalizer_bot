import * as GlobalModule from '../../../../../../@module.js';
//* -------------------------------------------------------------------------
//* Realization
//* -------------------------------------------------------------------------
export default function HEXToRGB(hexColor) {
    const Validator = GlobalModule.Classes.Validator;
    Validator.Strict(hexColor, new Validator().Custom.Color.HEX().Required());
    const HEXColorPattern = Validator.TypeGuard.Custom.Color.IsHEX.Pattern.HEXColor;
    const HEXColorPatternMatch = new RegExp(`^${HEXColorPattern.RegExp.source}$`, undefined).exec(hexColor);
    const HEXColorValue = HEXColorPatternMatch[HEXColorPattern.Group.Color.Value];
    const FullHEXColorValue = HEXColorValue.length === 3
        ? HEXColorValue.split(/[]{0}/)
            .map((_el, _ind, _arr) => `${_el}${_el}`)
            .join(``)
        : HEXColorValue;
    const FullHEXColorValueToInt = Number.parseInt(FullHEXColorValue, 16);
    const RGB_Red = (FullHEXColorValueToInt >> 16) & 0xff;
    const RGB_Green = (FullHEXColorValueToInt >> 8) & 0xff;
    const RGB_Blue = FullHEXColorValueToInt & 0xff;
    const RGBColor = [RGB_Red, RGB_Green, RGB_Blue];
    return RGBColor;
}
//# sourceMappingURL=HEXToRGB.js.map