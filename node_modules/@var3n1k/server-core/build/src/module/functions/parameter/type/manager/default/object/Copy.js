import * as GlobalModule from '../../../../../../@module.js';
//* -------------------------------------------------------------------------
//* Realization
//* -------------------------------------------------------------------------
export default function Copy(initialObject) {
    const Validator = GlobalModule.Classes.Validator;
    Validator.Strict(initialObject, new Validator().Default.Object().Required());
    const CopyObjectLevel = (objectLevel) => {
        const ObjectLevelProperties = GlobalModule.Functions.Parameter.Type.Manager.Default.Object.GetProperties(objectLevel);
        let ObjectLevelCopy = {};
        for (let i = 0; i < ObjectLevelProperties.length; i++) {
            const ObjectLevelProperty = ObjectLevelProperties[i];
            const InitialObjectLevelPropertyValue = objectLevel[ObjectLevelProperty];
            const IsInitialObjectLevelPropertyValueObject = Validator.TypeGuard.Default.IsObject(InitialObjectLevelPropertyValue);
            const IsInitialObjectLevelPropertyValueArray = Validator.TypeGuard.Default.IsArray(InitialObjectLevelPropertyValue);
            const IsInitialObjectLevelPropertyValueNeedToBeCopied = IsInitialObjectLevelPropertyValueObject || IsInitialObjectLevelPropertyValueArray;
            if (IsInitialObjectLevelPropertyValueNeedToBeCopied) {
                if (IsInitialObjectLevelPropertyValueObject) {
                    ObjectLevelCopy[ObjectLevelProperty] = CopyObjectLevel(InitialObjectLevelPropertyValue);
                }
                else {
                    if (IsInitialObjectLevelPropertyValueArray) {
                        ObjectLevelCopy[ObjectLevelProperty] = GlobalModule.Functions.Parameter.Type.Manager.Default.Array.Copy(InitialObjectLevelPropertyValue);
                    }
                }
            }
            else {
                ObjectLevelCopy[ObjectLevelProperty] = InitialObjectLevelPropertyValue;
            }
        }
        const CopiedObjectLevel = Object.assign({}, ObjectLevelCopy);
        return CopiedObjectLevel;
    };
    const CopiedObject = CopyObjectLevel(initialObject);
    return CopiedObject;
}
//# sourceMappingURL=Copy.js.map