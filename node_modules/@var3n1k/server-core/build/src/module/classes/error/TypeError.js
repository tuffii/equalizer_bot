import * as GlobalModule from '../../@module.js';
const ParameterTypePresets = {
    Default: {
        Any: `любого параметра`,
        Symbol: `уникального символьного значения`,
        String: {
            Base: `строкового параметра`,
            WordLike: `цельного строкового параметра`,
            SymbolLike: `символьно-строкового параметра`,
        },
        Numeric: {
            Base: `исчисляемого параметра`,
            BigInt: `увеличенного целочисленного параметра`,
            Number: `численного параметра`,
            Integer: `целочисленного параметра`,
        },
        Array: `массива`,
        Object: `объекта`,
        RegExp: `регулярного выражения`,
        Boolean: `булевого значения`,
        Date: `даты`,
        Function: `функции`,
        Error: `исключения`,
        Class: {
            Instance: `сущности некоторого класса`,
            Declaration: `декларации некоторого класса`,
        },
    },
    Custom: {
        FileSystem: {
            Any: {
                Path: `пути к расположению объекта в файловой системе`,
                URL: `ссылки на расположенный объект в файловой системе`,
            },
            File: {
                Path: `пути к расположению файла в файловой системе`,
                URL: `ссылки на расположенный файл в файловой системе`,
            },
            Directory: {
                Path: `пути к расположению директории в файловой системе`,
                URL: `ссылки на расположенную директорию в файловой системе`,
            },
        },
        Color: {
            HEX: `цветовой гаммы в формате HEX`,
            RGB: `цветовой гаммы в формате RGB`,
            RGBA: `цветовой гаммы в формате RGBA`,
        },
        URL: {
            Base: `ссылки на ресурс`,
        },
    },
};
const SpaceSymbol = GlobalModule.DataSet.Dictionary.Symbol.Single.Service.Separator.Space.Default;
const NumberToNamed = GlobalModule.Functions.Parameter.Type.Manager.Default.Numeric.ToNamed;
const ValuesIteration = (...values) => {
    const FormattedArray = values.reduce((_prev, _curr, _currInd, _arr) => {
        const IsFirstElement = _currInd === 0;
        const ArrayFromFirstElement = [..._prev, _curr];
        const ArrayFromSecondElement = [..._prev, SpaceSymbol, `|`, SpaceSymbol, _curr];
        const SplittedArray = IsFirstElement ? ArrayFromFirstElement : ArrayFromSecondElement;
        return SplittedArray;
    }, []);
    return FormattedArray;
};
const MessagePresets = {
    Part: {
        Any: {
            Definition: (expectedTypeNamingInfo) => [`Ожидалось указание`, SpaceSymbol, ...expectedTypeNamingInfo],
            TypeDefinition: (parameter) => [`типа`, SpaceSymbol, `'${typeof parameter}'`],
            Received: (parameter, parameterInfo) => [`Получен параметр`, ...parameterInfo, SpaceSymbol, `(`, parameter, `)`],
            ReceivedWType: (parameter) => [...MessagePresets.Part.Any.Received(parameter, [SpaceSymbol, ...MessagePresets.Part.Any.TypeDefinition(parameter)])],
            HelpParameter: (helpMessage) => (GlobalModule.Classes.Validator.TypeGuard.Default.IsEmptyArray(helpMessage) ? [``] : [`.`, SpaceSymbol, ...helpMessage]),
        },
    },
    Full: {
        Any: {
            TypeMismatch: (parameter, expectedParameterToMatchType) => [
                ...MessagePresets.Part.Any.Definition([`параметра`]),
                `, соответствующего по типу параметру`,
                SpaceSymbol,
                ...MessagePresets.Part.Any.TypeDefinition(expectedParameterToMatchType),
                `.`,
                SpaceSymbol,
                ...MessagePresets.Part.Any.ReceivedWType(parameter),
            ],
            Invalid: (parameter, expectedTypeNaming) => [
                ...MessagePresets.Part.Any.Definition([expectedTypeNaming]),
                `.`,
                SpaceSymbol,
                ...MessagePresets.Part.Any.ReceivedWType(parameter),
            ],
            Empty: (expectedTypeNaming) => [`Полученный параметр является указанием пустого`, SpaceSymbol, expectedTypeNaming],
            Unexpected: (parameter, expectedTypeNaming, helpMessage) => [
                `Полученный параметр`,
                SpaceSymbol,
                ...MessagePresets.Part.Any.TypeDefinition(parameter),
                SpaceSymbol,
                `(`,
                parameter,
                `)`,
                SpaceSymbol,
                `не соответствует ожидаемым требованиям указания`,
                SpaceSymbol,
                expectedTypeNaming,
                ...MessagePresets.Part.Any.HelpParameter(helpMessage),
            ],
        },
        Default: {
            String: {
                Base: {
                    Length: {
                        Unexpected: (parameter, parameterSubType, expectedLengthDescription) => [
                            ...MessagePresets.Part.Any.Definition([...(parameterSubType.length > 0 ? [...parameterSubType, SpaceSymbol] : []), ParameterTypePresets.Default.String.Base]),
                            ...expectedLengthDescription,
                            `.`,
                            SpaceSymbol,
                            SpaceSymbol,
                            ...MessagePresets.Part.Any.Received(parameter, [
                                SpaceSymbol,
                                `длиной в`,
                                SpaceSymbol,
                                NumberToNamed(parameter.length, GlobalModule.DataSet.Dictionary.Symbol.Single.Service.Separator.Space.Default, [undefined, `символов`], [undefined, `символ`], [undefined, `символа`]),
                            ]),
                        ],
                        MoreThan: (parameter, expectedLength) => MessagePresets.Full.Default.String.Base.Length.Unexpected(parameter, [], [
                            `длиной более`,
                            SpaceSymbol,
                            NumberToNamed(expectedLength, GlobalModule.DataSet.Dictionary.Symbol.Single.Service.Separator.Space.Default, [undefined, `символов`], [undefined, `символа`], [undefined, `символов`]),
                        ]),
                        EqualTo: (parameter, expectedLength) => MessagePresets.Full.Default.String.Base.Length.Unexpected(parameter, [], [
                            `длиной в`,
                            SpaceSymbol,
                            NumberToNamed(expectedLength, GlobalModule.DataSet.Dictionary.Symbol.Single.Service.Separator.Space.Default, [undefined, `символов`], [undefined, `символ`], [undefined, `символа`]),
                        ]),
                        LessThan: (parameter, expectedLength) => MessagePresets.Full.Default.String.Base.Length.Unexpected(parameter, [], [
                            `длиной менее`,
                            SpaceSymbol,
                            NumberToNamed(expectedLength, GlobalModule.DataSet.Dictionary.Symbol.Single.Service.Separator.Space.Default, [undefined, `символов`], [undefined, `символа`], [undefined, `символов`]),
                        ]),
                    },
                },
            },
            Numeric: {
                Base: {
                    Value: {
                        Unexpected: (parameter, parameterSubType, expectedValueDescription) => [
                            ...MessagePresets.Part.Any.Definition([...(parameterSubType.length > 0 ? [...parameterSubType, SpaceSymbol] : []), ParameterTypePresets.Default.Numeric.Base]),
                            ...expectedValueDescription,
                            `.`,
                            SpaceSymbol,
                            ...MessagePresets.Part.Any.Received(parameter, []),
                        ],
                        MoreThan: (parameter, expectedValue) => MessagePresets.Full.Default.Numeric.Base.Value.Unexpected(parameter, [], [`, превышающего по величине значение`, SpaceSymbol, expectedValue]),
                        MoreThanOrEqual: (parameter, expectedValue) => MessagePresets.Full.Default.Numeric.Base.Value.Unexpected(parameter, [], [`, превышающего или равного по величине значению`, SpaceSymbol, expectedValue]),
                        EqualTo: (parameter, expectedValue) => MessagePresets.Full.Default.Numeric.Base.Value.Unexpected(parameter, [], [`, равного по величине значению`, SpaceSymbol, expectedValue]),
                        LessThan: (parameter, expectedValue) => MessagePresets.Full.Default.Numeric.Base.Value.Unexpected(parameter, [], [`, уступающего по величине значению`, SpaceSymbol, expectedValue]),
                        LessThanOrEqual: (parameter, expectedValue) => MessagePresets.Full.Default.Numeric.Base.Value.Unexpected(parameter, [], [`, уступающего или равного по величине значению`, SpaceSymbol, expectedValue]),
                        Positive: (parameter) => MessagePresets.Full.Default.Numeric.Base.Value.Unexpected(parameter, [`положительного`], []),
                        Negative: (parameter) => MessagePresets.Full.Default.Numeric.Base.Value.Unexpected(parameter, [`отрицательного`], []),
                    },
                },
            },
            Array: {
                Length: {
                    Unexpected: (parameter, parameterSubType, expectedLengthDescription) => [
                        ...MessagePresets.Part.Any.Definition([...(parameterSubType.length > 0 ? [...parameterSubType, SpaceSymbol] : []), ParameterTypePresets.Default.Array]),
                        ...expectedLengthDescription,
                        `.`,
                        SpaceSymbol,
                        ...MessagePresets.Part.Any.Received(parameter, [
                            SpaceSymbol,
                            `размером в`,
                            SpaceSymbol,
                            NumberToNamed(parameter.length, GlobalModule.DataSet.Dictionary.Symbol.Single.Service.Separator.Space.Default, [undefined, `элементов`], [undefined, `элемент`], [undefined, `элемента`]),
                        ]),
                    ],
                    MoreThan: (parameter, expectedLength) => MessagePresets.Full.Default.Array.Length.Unexpected(parameter, [], [
                        `, содержащего в себе более`,
                        SpaceSymbol,
                        NumberToNamed(expectedLength, GlobalModule.DataSet.Dictionary.Symbol.Single.Service.Separator.Space.Default, [undefined, `элементов`], [undefined, `элемента`], [undefined, `элементов`]),
                    ]),
                    EqualTo: (parameter, expectedLength) => MessagePresets.Full.Default.Array.Length.Unexpected(parameter, [], [
                        `, содержащего в себе`,
                        SpaceSymbol,
                        NumberToNamed(expectedLength, GlobalModule.DataSet.Dictionary.Symbol.Single.Service.Separator.Space.Default, [undefined, `элементов`], [undefined, `элемент`], [undefined, `элемента`]),
                    ]),
                    LessThan: (parameter, expectedLength) => MessagePresets.Full.Default.Array.Length.Unexpected(parameter, [], [
                        `, содержащего в себе менее`,
                        SpaceSymbol,
                        NumberToNamed(expectedLength, GlobalModule.DataSet.Dictionary.Symbol.Single.Service.Separator.Space.Default, [undefined, `элементов`], [undefined, `элемента`], [undefined, `элементов`]),
                    ]),
                },
                Depth: {
                    Unexpected: (parameter, parameterSubType, expectedDepthDescription) => [
                        ...MessagePresets.Part.Any.Definition([...(parameterSubType.length > 0 ? [...parameterSubType, SpaceSymbol] : []), ParameterTypePresets.Default.Array]),
                        ...expectedDepthDescription,
                        `.`,
                        SpaceSymbol,
                        ...MessagePresets.Part.Any.Received(parameter, [
                            SpaceSymbol,
                            `с`,
                            SpaceSymbol,
                            GlobalModule.Functions.Parameter.Type.Manager.Default.Array.GetDepth(parameter),
                            SpaceSymbol,
                            `уровнем вложенности`,
                        ]),
                    ],
                    MoreThan: (parameter, expectedDepth) => MessagePresets.Full.Default.Array.Depth.Unexpected(parameter, [], [`с не менее, чем`, SpaceSymbol, expectedDepth, SpaceSymbol, `уровнем вложенности`]),
                    EqualTo: (parameter, expectedDepth) => MessagePresets.Full.Default.Array.Depth.Unexpected(parameter, [], [`с`, SpaceSymbol, expectedDepth, SpaceSymbol, `уровнем вложенности`]),
                    LessThan: (parameter, expectedDepth) => MessagePresets.Full.Default.Array.Depth.Unexpected(parameter, [], [`с не более, чем`, SpaceSymbol, expectedDepth, SpaceSymbol, `уровнем вложенности`]),
                },
            },
            Object: {
                Size: {
                    Unexpected: (parameter, parameterSubType, expectedSizeDescription) => [
                        ...MessagePresets.Part.Any.Definition([...(parameterSubType.length > 0 ? [...parameterSubType, SpaceSymbol] : []), ParameterTypePresets.Default.Object]),
                        ...expectedSizeDescription,
                        `.`,
                        SpaceSymbol,
                        ...MessagePresets.Part.Any.Received(parameter, [
                            SpaceSymbol,
                            `объемом в`,
                            SpaceSymbol,
                            NumberToNamed(GlobalModule.Functions.Parameter.Type.Manager.Default.Object.GetProperties(parameter).length, GlobalModule.DataSet.Dictionary.Symbol.Single.Service.Separator.Space.Default, [undefined, `полей`], [undefined, `поле`], [undefined, `поля`]),
                        ]),
                    ],
                    MoreThan: (parameter, expectedSize) => MessagePresets.Full.Default.Object.Size.Unexpected(parameter, [], [
                        `, содержащего в себе более`,
                        SpaceSymbol,
                        NumberToNamed(expectedSize, GlobalModule.DataSet.Dictionary.Symbol.Single.Service.Separator.Space.Default, [undefined, `полей`], [undefined, `поля`], [undefined, `полей`]),
                    ]),
                    EqualTo: (parameter, expectedSize) => MessagePresets.Full.Default.Object.Size.Unexpected(parameter, [], [
                        `, содержащего в себе`,
                        SpaceSymbol,
                        NumberToNamed(expectedSize, GlobalModule.DataSet.Dictionary.Symbol.Single.Service.Separator.Space.Default, [undefined, `полей`], [undefined, `поле`], [undefined, `поля`]),
                    ]),
                    LessThan: (parameter, expectedSize) => MessagePresets.Full.Default.Object.Size.Unexpected(parameter, [], [
                        `, содержащего в себе менее`,
                        SpaceSymbol,
                        NumberToNamed(expectedSize, GlobalModule.DataSet.Dictionary.Symbol.Single.Service.Separator.Space.Default, [undefined, `полей`], [undefined, `поля`], [undefined, `полей`]),
                    ]),
                },
                Depth: {
                    Unexpected: (parameter, parameterSubType, expectedDepthDescription) => [
                        ...MessagePresets.Part.Any.Definition([...(parameterSubType.length > 0 ? [...parameterSubType, SpaceSymbol] : []), ParameterTypePresets.Default.Object]),
                        ...expectedDepthDescription,
                        `.`,
                        SpaceSymbol,
                        ...MessagePresets.Part.Any.Received(parameter, [
                            SpaceSymbol,
                            `с`,
                            SpaceSymbol,
                            GlobalModule.Functions.Parameter.Type.Manager.Default.Object.GetDepth(parameter),
                            SpaceSymbol,
                            `уровнем вложенности`,
                        ]),
                    ],
                    MoreThan: (parameter, expectedDepth) => MessagePresets.Full.Default.Object.Depth.Unexpected(parameter, [], [`с не менее, чем`, SpaceSymbol, expectedDepth, SpaceSymbol, `уровнем вложенности`]),
                    EqualTo: (parameter, expectedDepth) => MessagePresets.Full.Default.Object.Depth.Unexpected(parameter, [], [`с`, SpaceSymbol, expectedDepth, SpaceSymbol, `уровнем вложенности`]),
                    LessThan: (parameter, expectedDepth) => MessagePresets.Full.Default.Object.Depth.Unexpected(parameter, [], [`с не более, чем`, SpaceSymbol, expectedDepth, SpaceSymbol, `уровнем вложенности`]),
                },
                Keys: {
                    Unexpected: (parameter, parameterSubType, expectedKeysDescription) => [
                        ...MessagePresets.Part.Any.Definition([...(parameterSubType.length > 0 ? [...parameterSubType, SpaceSymbol] : []), ParameterTypePresets.Default.Object]),
                        ...expectedKeysDescription,
                        `.`,
                        SpaceSymbol,
                        ...MessagePresets.Part.Any.Received(parameter, [
                            SpaceSymbol,
                            `c`,
                            SpaceSymbol,
                            GlobalModule.Functions.Parameter.Type.Manager.Default.Object.GetProperties(parameter).length === 1 ? `полем` : `полями`,
                            SpaceSymbol,
                            `"`,
                            ...ValuesIteration(...GlobalModule.Functions.Parameter.Type.Manager.Default.Object.GetProperties(parameter)),
                            `"`,
                        ]),
                    ],
                    With: (parameter, expectedKeys) => MessagePresets.Full.Default.Object.Keys.Unexpected(parameter, [], [`, состоящего как минимум из`, SpaceSymbol, expectedKeys.length === 1 ? `поля` : `полей`, SpaceSymbol, `"`, ...ValuesIteration(...expectedKeys), `"`]),
                    Of: (parameter, expectedKeys) => MessagePresets.Full.Default.Object.Keys.Unexpected(parameter, [], [`, состоящего исключительно из`, SpaceSymbol, expectedKeys.length === 1 ? `поля` : `полей`, SpaceSymbol, `"`, ...ValuesIteration(...expectedKeys), `"`]),
                },
            },
            RegExp: {
                Unexpected: (parameter, parameterSubType) => [
                    ...MessagePresets.Part.Any.Definition([...(parameterSubType.length > 0 ? [...parameterSubType, SpaceSymbol] : []), ParameterTypePresets.Default.RegExp]),
                    `.`,
                    SpaceSymbol,
                    ...MessagePresets.Part.Any.Received(parameter, []),
                ],
                Global: (parameter) => MessagePresets.Full.Default.RegExp.Unexpected(parameter, [`глобального`]),
                Multiline: (parameter) => MessagePresets.Full.Default.RegExp.Unexpected(parameter, [`мультилинейного`]),
                CaseIgnored: (parameter) => MessagePresets.Full.Default.RegExp.Unexpected(parameter, [`трансскриптного`]),
            },
            Date: {
                Unexpected: (parameter, parameterSubType, expectedDateDescription, expectedDate) => [
                    ...MessagePresets.Part.Any.Definition([...(parameterSubType.length > 0 ? [...parameterSubType, SpaceSymbol] : []), ParameterTypePresets.Default.Date]),
                    ...expectedDateDescription,
                    SpaceSymbol,
                    expectedDate,
                    `.`,
                    SpaceSymbol,
                    ...MessagePresets.Part.Any.Received(parameter, []),
                ],
                NewerThan: (parameter, expectedDate) => MessagePresets.Full.Default.Date.Unexpected(parameter, [`более поздней`], [`, чем`], expectedDate),
                NewerThanNow: (parameter) => MessagePresets.Full.Default.Date.NewerThan(parameter, new Date()),
                NewerThanOrEqual: (parameter, expectedDate) => MessagePresets.Full.Default.Date.Unexpected(parameter, [`более поздней`], [SpaceSymbol, `или равной отметке`], expectedDate),
                NewerThanOrEqualNow: (parameter) => MessagePresets.Full.Default.Date.NewerThanOrEqual(parameter, new Date()),
                OlderThan: (parameter, expectedDate) => MessagePresets.Full.Default.Date.Unexpected(parameter, [`более ранней`], [`, чем`], expectedDate),
                OlderThanNow: (parameter) => MessagePresets.Full.Default.Date.OlderThan(parameter, new Date()),
                OlderThanOrEqual: (parameter, expectedDate) => MessagePresets.Full.Default.Date.Unexpected(parameter, [`более ранней`], [SpaceSymbol, `или равной отметке`], expectedDate),
                OlderThanOrEqualNow: (parameter) => MessagePresets.Full.Default.Date.OlderThanOrEqual(parameter, new Date()),
            },
            Class: {
                Instance: {
                    Unexpected: (parameter, parameterSubType, expectedClassDescription) => [
                        ...MessagePresets.Part.Any.Definition([...(parameterSubType.length > 0 ? [...parameterSubType, SpaceSymbol] : []), ParameterTypePresets.Default.Class.Instance]),
                        ...expectedClassDescription,
                        `.`,
                        SpaceSymbol,
                        ...MessagePresets.Part.Any.Received(parameter, []),
                    ],
                    InstanceOf: (parameter, expectedClassInstance) => MessagePresets.Full.Default.Class.Instance.Unexpected(parameter, [], [SpaceSymbol, `(`, expectedClassInstance, `).`]),
                },
            },
        },
        Custom: {
            FileSystem: {
                File: {
                    Unreachable: (path) => [`Указанный файл в файловой системе (`, path, `) является недоступным`],
                    Unreadable: (path) => [`Отсутствуют права на чтение файла в файловой системе (`, path, `)`],
                    Unwriteable: (path) => [`Отсутствуют права на запись в файл в файловой системе (`, path, `)`],
                    DoesntExist: (path) => [`Указанного файла в файловой системе (`, path, `) не существует`],
                },
                Directory: {
                    DoesntExist: (path) => [`Указанной директории в файловой системе (`, path, `) не существует`],
                },
            },
        },
    },
};
const CodeName = {
    Default: {
        TypeMatch: {
            Invalid: `INVALID_TYPE_MATCH`,
        },
        Any: {
            Invalid: `INVALID_PARAMETER`,
            Unexpected: `UNEXPECTED_PARAMETER`,
        },
        Symbol: {
            Invalid: `INVALID_SYMBOL`,
            Unexpected: `UNEXPECTED_SYMBOL`,
        },
        String: {
            Base: {
                Invalid: `INVALID_STRING`,
                Empty: `EMPTY_STRING`,
                Expected: {
                    Length: {
                        MoreThan: `EXPECTED_STRING_LENGTH_TO_BE_MORE_THAN`,
                        EqualTo: `EXPECTED_STRING_LENGTH_TO_BE_EQUAL_TO`,
                        LessThan: `EXPECTED_STRING_LENGTH_TO_BE_LESS_THAN`,
                    },
                },
                Unexpected: `UNEXPECTED_STRING`,
            },
            WordLike: {
                Invalid: `INVALID_WORDLIKE_STRING`,
                Unexpected: `UNEXPECTED_WORDLIKE_STRING`,
            },
            SymbolLike: {
                Invalid: `INVALID_SYMBOLLIKE_STRING`,
                Unexpected: `UNEXPECTED_SYMBOLLIKE_STRING`,
            },
        },
        Numeric: {
            Base: {
                Invalid: `INVALID_NUMERIC`,
                Expected: {
                    Value: {
                        MoreThan: `EXPECTED_NUMERIC_VALUE_TO_BE_MORE_THAN`,
                        MoreThanOrEqual: `EXPECTED_NUMERIC_VALUE_TO_BE_MORE_THAN_OR_EQUAL`,
                        EqualTo: `EXPECTED_NUMERIC_VALUE_TO_BE_EQUAL_TO`,
                        LessThan: `EXPECTED_NUMERIC_VALUE_TO_BE_LESS_THAN`,
                        LessThanOrEqual: `EXPECTED_NUMERIC_VALUE_TO_BE_LESS_THAN_OR_EQUAL`,
                    },
                    Positive: `EXPECTED_NUMERIC_VALUE_TO_BE_POSITIVE`,
                    Negative: `EXPECTED_NUMERIC_VALUE_TO_BE_NEGATIVE`,
                },
                Unexpected: `UNEXPECTED_NUMERIC`,
            },
            BigInt: {
                Invalid: `INVALID_BIGINT`,
                Unexpected: `UNEXPECTED_BIGINT`,
            },
            Number: {
                Invalid: `INVALID_NUMBER`,
                Unexpected: `UNEXPECTED_NUMBER`,
            },
            Integer: {
                Invalid: `INVALID_INTEGER`,
                Unexpected: `UNEXPECTED_INTEGER`,
            },
        },
        Array: {
            Invalid: `INVALID_ARRAY`,
            Empty: `EMPTY_ARRAY`,
            Expected: {
                Length: {
                    MoreThan: `EXPECTED_ARRAY_LENGTH_TO_BE_MORE_THAN`,
                    EqualTo: `EXPECTED_ARRAY_LENGTH_TO_BE_EQUAL_TO`,
                    LessThan: `EXPECTED_ARRAY_LENGTH_TO_BE_LESS_THAN`,
                },
                Depth: {
                    MoreThan: `EXPECTED_ARRAY_DEPTH_TO_BE_MORE_THAN`,
                    EqualTo: `EXPECTED_ARRAY_DEPTH_TO_BE_EQUAL_TO`,
                    LessThan: `EXPECTED_ARRAY_DEPTH_TO_BE_LESS_THAN`,
                },
            },
            Unexpected: `UNEXPECTED_ARRAY`,
        },
        Object: {
            Invalid: `INVALID_OBJECT`,
            Empty: `EMPTY_OBJECT`,
            Expected: {
                Size: {
                    MoreThan: `EXPECTED_OBJECT_SIZE_TO_BE_MORE_THAN`,
                    EqualTo: `EXPECTED_OBJECT_SIZE_TO_BE_EQUAL_TO`,
                    LessThan: `EXPECTED_OBJECT_SIZE_TO_BE_LESS_THAN`,
                },
                Depth: {
                    MoreThan: `EXPECTED_OBJECT_DEPTH_TO_BE_MORE_THAN`,
                    EqualTo: `EXPECTED_OBJECT_DEPTH_TO_BE_EQUAL_TO`,
                    LessThan: `EXPECTED_OBJECT_DEPTH_TO_BE_LESS_THAN`,
                },
                Keys: {
                    With: `EXPECTED_OBJECT_WITH_KEYS`,
                    Of: `EXPECTED_OBJECT_OF_KEYS`,
                },
            },
            Unexpected: `UNEXPECTED_OBJECT`,
        },
        RegExp: {
            Invalid: `INVALID_REGEXP`,
            Expected: {
                Global: `EXPECTED_REGEXP_TO_BE_GLOBAL`,
                Multiline: `EXPECTED_REGEXP_TO_BE_MULTILINE`,
                CaseIgnored: `EXPECTED_REGEXP_TO_BE_CASE_IGNORED`,
            },
            Unexpected: `UNEXPECTED_REGEXP`,
        },
        Boolean: {
            Invalid: `INVALID_BOOLEAN`,
            Unexpected: `UNEXPECTED_BOOLEAN`,
        },
        Date: {
            Invalid: `INVALID_DATE`,
            Expected: {
                NewerThan: `EXPECTED_DATE_TO_BE_NEWER_THAN`,
                NewerThanNow: `EXPECTED_DATE_TO_BE_NEWER_THAN_NOW`,
                NewerThanOrEqual: `EXPECTED_DATE_TO_BE_NEWER_THAN_OR_EQUAL`,
                NewerThanOrEqualNow: `EXPECTED_DATE_TO_BE_NEWER_THAN_OR_EQUAL_NOW`,
                OlderThan: `EXPECTED_DATE_TO_BE_OLDER_THAN`,
                OlderThanNow: `EXPECTED_DATE_TO_BE_OLDER_THAN_NOW`,
                OlderThanOrEqual: `EXPECTED_DATE_TO_BE_OLDER_THAN_OR_EQUAL`,
                OlderThanOrEqualNow: `EXPECTED_DATE_TO_BE_OLDER_THAN_OR_EQUAL_NOW`,
            },
            Unexpected: `UNEXPECTED_DATE`,
        },
        Function: {
            Invalid: `INVALID_FUNCTION`,
            Unexpected: `UNEXPECTED_FUNCTION`,
        },
        Error: {
            Invalid: `INVALID_ERROR`,
            Unexpected: `UNEXPECTED_ERROR`,
        },
        Class: {
            Instance: {
                Invalid: `INVALID_CLASS_INSTANCE`,
                Expected: {
                    InstanceOf: `EXPECTED_CLASS_INSTANCE_TO_BE_INSTANCE_OF`,
                },
                Unexpected: `UNEXPECTED_CLASS_INSTANCE`,
            },
            Declaration: {
                Invalid: `INVALID_CLASS_DECLARATION`,
                Unexpected: `UNEXPECTED_CLASS_DECLARATION`,
            },
        },
    },
    Custom: {
        FileSystem: {
            Any: {
                Path: {
                    Invalid: `INVALID_PATH`,
                    Unexpected: `UNEXPECTED_PATH`,
                },
                URL: {
                    Invalid: `INVALID_PATH_URL`,
                    Unexpected: `UNEXPECTED_PATH_URL`,
                },
            },
            File: {
                Path: {
                    Invalid: `INVALID_FILE_PATH`,
                    Unexpected: `UNEXPECTED_FILE_PATH`,
                },
                URL: {
                    Invalid: `INVALID_FILE_PATH_URL`,
                    Unexpected: `UNEXPECTED_FILE_PATH_URL`,
                },
                Unreachable: `UNREACHABLE_FILE`,
                Unreadable: `UNREADABLE_FILE`,
                Unwriteable: `UNWRITEABLE_FILE`,
                DoesntExist: `FILE_DOESNT_EXIST`,
            },
            Directory: {
                Path: {
                    Invalid: `INVALID_DIRECTORY_PATH`,
                    Unexpected: `UNEXPECTED_DIRECTORY_PATH`,
                },
                URL: {
                    Invalid: `INVALID_DIRECTORY_PATH_URL`,
                    Unexpected: `UNEXPECTED_DIRECTORY_PATH_URL`,
                },
                DoesntExist: `DIRECTORY_DOESNT_EXIST`,
            },
        },
        Color: {
            HEX: {
                Invalid: `INVALID_COLOR_HEX`,
                Unexpected: `UNEXPECTED_COLOR_HEX`,
            },
            RGB: {
                Invalid: `INVALID_COLOR_RGB`,
                Unexpected: `UNEXPECTED_COLOR_RGB`,
            },
            RGBA: {
                Invalid: `INVALID_COLOR_RGBA`,
                Unexpected: `UNEXPECTED_COLOR_RGBA`,
            },
        },
        URL: {
            Base: {
                Invalid: `INVALID_BASE_URL`,
                Unexpected: `UNEXPECTED_BASE_URL`,
            },
        },
    },
};
const MessageConstructor = {
    [CodeName.Default.TypeMatch.Invalid]: {
        Code: 100000,
        Message: ((_, __) => MessagePresets.Full.Any.TypeMismatch(_, __)),
    },
    [CodeName.Default.Any.Invalid]: {
        Code: 100001,
        Message: ((_) => MessagePresets.Full.Any.Invalid(_, ParameterTypePresets.Default.Any)),
    },
    [CodeName.Default.Any.Unexpected]: {
        Code: 100999,
        Message: ((_, __) => MessagePresets.Full.Any.Unexpected(_, ParameterTypePresets.Default.Any, __)),
    },
    [CodeName.Default.Symbol.Invalid]: {
        Code: 101000,
        Message: ((_) => MessagePresets.Full.Any.Invalid(_, ParameterTypePresets.Default.Symbol)),
    },
    [CodeName.Default.Symbol.Unexpected]: {
        Code: 101999,
        Message: ((_, __) => MessagePresets.Full.Any.Unexpected(_, ParameterTypePresets.Default.Symbol, __)),
    },
    [CodeName.Default.String.Base.Invalid]: {
        Code: 102000,
        Message: ((_) => MessagePresets.Full.Any.Invalid(_, ParameterTypePresets.Default.String.Base)),
    },
    [CodeName.Default.String.Base.Empty]: {
        Code: 102001,
        Message: (() => MessagePresets.Full.Any.Empty(ParameterTypePresets.Default.String.Base)),
    },
    [CodeName.Default.String.Base.Expected.Length.MoreThan]: {
        Code: 102010,
        Message: ((_, __) => MessagePresets.Full.Default.String.Base.Length.MoreThan(_, __)),
    },
    [CodeName.Default.String.Base.Expected.Length.EqualTo]: {
        Code: 102011,
        Message: ((_, __) => MessagePresets.Full.Default.String.Base.Length.EqualTo(_, __)),
    },
    [CodeName.Default.String.Base.Expected.Length.LessThan]: {
        Code: 102012,
        Message: ((_, __) => MessagePresets.Full.Default.String.Base.Length.LessThan(_, __)),
    },
    [CodeName.Default.String.Base.Unexpected]: {
        Code: 102999,
        Message: ((_, __) => MessagePresets.Full.Any.Unexpected(_, ParameterTypePresets.Default.String.Base, __)),
    },
    [CodeName.Default.String.WordLike.Invalid]: {
        Code: 102100,
        Message: ((_) => MessagePresets.Full.Any.Invalid(_, ParameterTypePresets.Default.String.WordLike)),
    },
    [CodeName.Default.String.WordLike.Unexpected]: {
        Code: 102199,
        Message: ((_, __) => MessagePresets.Full.Any.Unexpected(_, ParameterTypePresets.Default.String.WordLike, __)),
    },
    [CodeName.Default.String.SymbolLike.Invalid]: {
        Code: 102200,
        Message: ((_) => MessagePresets.Full.Any.Invalid(_, ParameterTypePresets.Default.String.SymbolLike)),
    },
    [CodeName.Default.String.SymbolLike.Unexpected]: {
        Code: 102299,
        Message: ((_, __) => MessagePresets.Full.Any.Unexpected(_, ParameterTypePresets.Default.String.SymbolLike, __)),
    },
    [CodeName.Default.Numeric.Base.Invalid]: {
        Code: 103000,
        Message: ((_) => MessagePresets.Full.Any.Invalid(_, ParameterTypePresets.Default.Numeric.Base)),
    },
    [CodeName.Default.Numeric.Base.Expected.Value.MoreThan]: {
        Code: 103010,
        Message: ((_, __) => MessagePresets.Full.Default.Numeric.Base.Value.MoreThan(_, __)),
    },
    [CodeName.Default.Numeric.Base.Expected.Value.MoreThanOrEqual]: {
        Code: 103011,
        Message: ((_, __) => MessagePresets.Full.Default.Numeric.Base.Value.MoreThanOrEqual(_, __)),
    },
    [CodeName.Default.Numeric.Base.Expected.Value.EqualTo]: {
        Code: 103012,
        Message: ((_, __) => MessagePresets.Full.Default.Numeric.Base.Value.EqualTo(_, __)),
    },
    [CodeName.Default.Numeric.Base.Expected.Value.LessThan]: {
        Code: 103013,
        Message: ((_, __) => MessagePresets.Full.Default.Numeric.Base.Value.LessThan(_, __)),
    },
    [CodeName.Default.Numeric.Base.Expected.Value.LessThanOrEqual]: {
        Code: 103014,
        Message: ((_, __) => MessagePresets.Full.Default.Numeric.Base.Value.LessThanOrEqual(_, __)),
    },
    [CodeName.Default.Numeric.Base.Expected.Positive]: {
        Code: 103015,
        Message: ((_) => MessagePresets.Full.Default.Numeric.Base.Value.Positive(_)),
    },
    [CodeName.Default.Numeric.Base.Expected.Negative]: {
        Code: 103016,
        Message: ((_) => MessagePresets.Full.Default.Numeric.Base.Value.Negative(_)),
    },
    [CodeName.Default.Numeric.Base.Unexpected]: {
        Code: 103999,
        Message: ((_, __) => MessagePresets.Full.Any.Unexpected(_, ParameterTypePresets.Default.Numeric.Base, __)),
    },
    [CodeName.Default.Numeric.BigInt.Invalid]: {
        Code: 103100,
        Message: ((_) => MessagePresets.Full.Any.Invalid(_, ParameterTypePresets.Default.Numeric.BigInt)),
    },
    [CodeName.Default.Numeric.BigInt.Unexpected]: {
        Code: 103199,
        Message: ((_, __) => MessagePresets.Full.Any.Unexpected(_, ParameterTypePresets.Default.Numeric.BigInt, __)),
    },
    [CodeName.Default.Numeric.Number.Invalid]: {
        Code: 103200,
        Message: ((_) => MessagePresets.Full.Any.Invalid(_, ParameterTypePresets.Default.Numeric.Number)),
    },
    [CodeName.Default.Numeric.Number.Unexpected]: {
        Code: 103299,
        Message: ((_, __) => MessagePresets.Full.Any.Unexpected(_, ParameterTypePresets.Default.Numeric.Number, __)),
    },
    [CodeName.Default.Numeric.Integer.Invalid]: {
        Code: 103300,
        Message: ((_) => MessagePresets.Full.Any.Invalid(_, ParameterTypePresets.Default.Numeric.Integer)),
    },
    [CodeName.Default.Numeric.Integer.Unexpected]: {
        Code: 103399,
        Message: ((_, __) => MessagePresets.Full.Any.Unexpected(_, ParameterTypePresets.Default.Numeric.Integer, __)),
    },
    [CodeName.Default.Array.Invalid]: {
        Code: 104000,
        Message: ((_) => MessagePresets.Full.Any.Invalid(_, ParameterTypePresets.Default.Array)),
    },
    [CodeName.Default.Array.Empty]: {
        Code: 104001,
        Message: (() => MessagePresets.Full.Any.Empty(ParameterTypePresets.Default.Array)),
    },
    [CodeName.Default.Array.Expected.Length.MoreThan]: {
        Code: 104010,
        Message: ((_, __) => MessagePresets.Full.Default.Array.Length.MoreThan(_, __)),
    },
    [CodeName.Default.Array.Expected.Length.EqualTo]: {
        Code: 104011,
        Message: ((_, __) => MessagePresets.Full.Default.Array.Length.EqualTo(_, __)),
    },
    [CodeName.Default.Array.Expected.Length.LessThan]: {
        Code: 104012,
        Message: ((_, __) => MessagePresets.Full.Default.Array.Length.LessThan(_, __)),
    },
    [CodeName.Default.Array.Expected.Depth.MoreThan]: {
        Code: 104020,
        Message: ((_, __) => MessagePresets.Full.Default.Array.Depth.MoreThan(_, __)),
    },
    [CodeName.Default.Array.Expected.Depth.EqualTo]: {
        Code: 104021,
        Message: ((_, __) => MessagePresets.Full.Default.Array.Depth.EqualTo(_, __)),
    },
    [CodeName.Default.Array.Expected.Depth.LessThan]: {
        Code: 104022,
        Message: ((_, __) => MessagePresets.Full.Default.Array.Depth.LessThan(_, __)),
    },
    [CodeName.Default.Array.Unexpected]: {
        Code: 104999,
        Message: ((_, __) => MessagePresets.Full.Any.Unexpected(_, ParameterTypePresets.Default.Array, __)),
    },
    [CodeName.Default.Object.Invalid]: {
        Code: 105000,
        Message: ((_) => MessagePresets.Full.Any.Invalid(_, ParameterTypePresets.Default.Object)),
    },
    [CodeName.Default.Object.Empty]: {
        Code: 105001,
        Message: (() => MessagePresets.Full.Any.Empty(ParameterTypePresets.Default.Object)),
    },
    [CodeName.Default.Object.Expected.Size.MoreThan]: {
        Code: 105010,
        Message: ((_, __) => MessagePresets.Full.Default.Object.Size.MoreThan(_, __)),
    },
    [CodeName.Default.Object.Expected.Size.EqualTo]: {
        Code: 105011,
        Message: ((_, __) => MessagePresets.Full.Default.Object.Size.EqualTo(_, __)),
    },
    [CodeName.Default.Object.Expected.Size.LessThan]: {
        Code: 105012,
        Message: ((_, __) => MessagePresets.Full.Default.Object.Size.LessThan(_, __)),
    },
    [CodeName.Default.Object.Expected.Depth.MoreThan]: {
        Code: 105020,
        Message: ((_, __) => MessagePresets.Full.Default.Object.Depth.MoreThan(_, __)),
    },
    [CodeName.Default.Object.Expected.Depth.EqualTo]: {
        Code: 105021,
        Message: ((_, __) => MessagePresets.Full.Default.Object.Depth.EqualTo(_, __)),
    },
    [CodeName.Default.Object.Expected.Depth.LessThan]: {
        Code: 105022,
        Message: ((_, __) => MessagePresets.Full.Default.Object.Depth.LessThan(_, __)),
    },
    [CodeName.Default.Object.Expected.Keys.With]: {
        Code: 105030,
        Message: ((_, __) => MessagePresets.Full.Default.Object.Keys.With(_, __)),
    },
    [CodeName.Default.Object.Expected.Keys.Of]: {
        Code: 105031,
        Message: ((_, __) => MessagePresets.Full.Default.Object.Keys.Of(_, __)),
    },
    [CodeName.Default.Object.Unexpected]: {
        Code: 105999,
        Message: ((_, __) => MessagePresets.Full.Any.Unexpected(_, ParameterTypePresets.Default.Object, __)),
    },
    [CodeName.Default.RegExp.Invalid]: {
        Code: 106000,
        Message: ((_) => MessagePresets.Full.Any.Invalid(_, ParameterTypePresets.Default.RegExp)),
    },
    [CodeName.Default.RegExp.Expected.Global]: { Code: 106010, Message: ((_) => MessagePresets.Full.Default.RegExp.Global(_)) },
    [CodeName.Default.RegExp.Expected.Multiline]: {
        Code: 106011,
        Message: ((_) => MessagePresets.Full.Default.RegExp.Multiline(_)),
    },
    [CodeName.Default.RegExp.Expected.CaseIgnored]: {
        Code: 106012,
        Message: ((_) => MessagePresets.Full.Default.RegExp.CaseIgnored(_)),
    },
    [CodeName.Default.RegExp.Unexpected]: {
        Code: 106999,
        Message: ((_, __) => MessagePresets.Full.Any.Unexpected(_, ParameterTypePresets.Default.RegExp, __)),
    },
    [CodeName.Default.Boolean.Invalid]: {
        Code: 107000,
        Message: ((_) => MessagePresets.Full.Any.Invalid(_, ParameterTypePresets.Default.Boolean)),
    },
    [CodeName.Default.Boolean.Unexpected]: {
        Code: 107999,
        Message: ((_, __) => MessagePresets.Full.Any.Unexpected(_, ParameterTypePresets.Default.Boolean, __)),
    },
    [CodeName.Default.Date.Invalid]: {
        Code: 108000,
        Message: ((_) => MessagePresets.Full.Any.Invalid(_, ParameterTypePresets.Default.Date)),
    },
    [CodeName.Default.Date.Expected.NewerThan]: {
        Code: 108010,
        Message: ((_, __) => MessagePresets.Full.Default.Date.NewerThan(_, __)),
    },
    [CodeName.Default.Date.Expected.NewerThanNow]: {
        Code: 108011,
        Message: ((_) => MessagePresets.Full.Default.Date.NewerThanNow(_)),
    },
    [CodeName.Default.Date.Expected.NewerThanOrEqual]: {
        Code: 108012,
        Message: ((_, __) => MessagePresets.Full.Default.Date.NewerThanOrEqual(_, __)),
    },
    [CodeName.Default.Date.Expected.NewerThanOrEqualNow]: {
        Code: 108013,
        Message: ((_) => MessagePresets.Full.Default.Date.NewerThanOrEqualNow(_)),
    },
    [CodeName.Default.Date.Expected.OlderThan]: {
        Code: 108014,
        Message: ((_, __) => MessagePresets.Full.Default.Date.OlderThan(_, __)),
    },
    [CodeName.Default.Date.Expected.OlderThanNow]: {
        Code: 108015,
        Message: ((_) => MessagePresets.Full.Default.Date.OlderThanNow(_)),
    },
    [CodeName.Default.Date.Expected.OlderThanOrEqual]: {
        Code: 108016,
        Message: ((_, __) => MessagePresets.Full.Default.Date.OlderThanOrEqual(_, __)),
    },
    [CodeName.Default.Date.Expected.OlderThanOrEqualNow]: {
        Code: 108017,
        Message: ((_) => MessagePresets.Full.Default.Date.OlderThanOrEqualNow(_)),
    },
    [CodeName.Default.Date.Unexpected]: {
        Code: 108999,
        Message: ((_, __) => MessagePresets.Full.Any.Unexpected(_, ParameterTypePresets.Default.Date, __)),
    },
    [CodeName.Default.Function.Invalid]: {
        Code: 109000,
        Message: ((_) => MessagePresets.Full.Any.Invalid(_, ParameterTypePresets.Default.Function)),
    },
    [CodeName.Default.Function.Unexpected]: {
        Code: 109999,
        Message: ((_, __) => MessagePresets.Full.Any.Unexpected(_, ParameterTypePresets.Default.Function, __)),
    },
    [CodeName.Default.Error.Invalid]: {
        Code: 110000,
        Message: ((_) => MessagePresets.Full.Any.Invalid(_, ParameterTypePresets.Default.Error)),
    },
    [CodeName.Default.Error.Unexpected]: {
        Code: 110999,
        Message: ((_, __) => MessagePresets.Full.Any.Unexpected(_, ParameterTypePresets.Default.Error, __)),
    },
    [CodeName.Default.Class.Instance.Invalid]: {
        Code: 111000,
        Message: ((_) => MessagePresets.Full.Any.Invalid(_, ParameterTypePresets.Default.Class.Instance)),
    },
    [CodeName.Default.Class.Instance.Expected.InstanceOf]: {
        Code: 111010,
        Message: ((_, __) => MessagePresets.Full.Default.Class.Instance.InstanceOf(_, __)),
    },
    [CodeName.Default.Class.Instance.Unexpected]: {
        Code: 111999,
        Message: ((_, __) => MessagePresets.Full.Any.Unexpected(_, ParameterTypePresets.Default.Class.Instance, __)),
    },
    [CodeName.Default.Class.Declaration.Invalid]: {
        Code: 112000,
        Message: ((_) => MessagePresets.Full.Any.Invalid(_, ParameterTypePresets.Default.Class.Declaration)),
    },
    [CodeName.Default.Class.Declaration.Unexpected]: {
        Code: 112999,
        Message: ((_, __) => MessagePresets.Full.Any.Unexpected(_, ParameterTypePresets.Default.Class.Declaration, __)),
    },
    [CodeName.Custom.FileSystem.Any.Path.Invalid]: {
        Code: 200000,
        Message: ((_) => MessagePresets.Full.Any.Invalid(_, ParameterTypePresets.Custom.FileSystem.Any.Path)),
    },
    [CodeName.Custom.FileSystem.Any.Path.Unexpected]: {
        Code: 200099,
        Message: ((_, __) => MessagePresets.Full.Any.Unexpected(_, ParameterTypePresets.Custom.FileSystem.Any.Path, __)),
    },
    [CodeName.Custom.FileSystem.Any.URL.Invalid]: {
        Code: 200100,
        Message: ((_) => MessagePresets.Full.Any.Invalid(_, ParameterTypePresets.Custom.FileSystem.Any.URL)),
    },
    [CodeName.Custom.FileSystem.Any.URL.Unexpected]: {
        Code: 200199,
        Message: ((_, __) => MessagePresets.Full.Any.Unexpected(_, ParameterTypePresets.Custom.FileSystem.Any.URL, __)),
    },
    [CodeName.Custom.FileSystem.File.Path.Invalid]: {
        Code: 201000,
        Message: ((_) => MessagePresets.Full.Any.Invalid(_, ParameterTypePresets.Custom.FileSystem.File.Path)),
    },
    [CodeName.Custom.FileSystem.File.Path.Unexpected]: {
        Code: 201099,
        Message: ((_, __) => MessagePresets.Full.Any.Unexpected(_, ParameterTypePresets.Custom.FileSystem.File.Path, __)),
    },
    [CodeName.Custom.FileSystem.File.URL.Invalid]: {
        Code: 201100,
        Message: ((_) => MessagePresets.Full.Any.Invalid(_, ParameterTypePresets.Custom.FileSystem.File.URL)),
    },
    [CodeName.Custom.FileSystem.File.URL.Unexpected]: {
        Code: 201199,
        Message: ((_, __) => MessagePresets.Full.Any.Unexpected(_, ParameterTypePresets.Custom.FileSystem.File.URL, __)),
    },
    [CodeName.Custom.FileSystem.File.Unreachable]: {
        Code: 201200,
        Message: ((_) => MessagePresets.Full.Custom.FileSystem.File.Unreachable(_)),
    },
    [CodeName.Custom.FileSystem.File.Unreadable]: {
        Code: 201201,
        Message: ((_) => MessagePresets.Full.Custom.FileSystem.File.Unreadable(_)),
    },
    [CodeName.Custom.FileSystem.File.Unwriteable]: {
        Code: 201202,
        Message: ((_) => MessagePresets.Full.Custom.FileSystem.File.Unwriteable(_)),
    },
    [CodeName.Custom.FileSystem.File.DoesntExist]: {
        Code: 201299,
        Message: ((_) => MessagePresets.Full.Custom.FileSystem.File.DoesntExist(_)),
    },
    [CodeName.Custom.FileSystem.Directory.Path.Invalid]: {
        Code: 202000,
        Message: ((_) => MessagePresets.Full.Any.Invalid(_, ParameterTypePresets.Custom.FileSystem.Directory.Path)),
    },
    [CodeName.Custom.FileSystem.Directory.Path.Unexpected]: {
        Code: 202099,
        Message: ((_, __) => MessagePresets.Full.Any.Unexpected(_, ParameterTypePresets.Custom.FileSystem.Directory.Path, __)),
    },
    [CodeName.Custom.FileSystem.Directory.URL.Invalid]: {
        Code: 202100,
        Message: ((_) => MessagePresets.Full.Any.Invalid(_, ParameterTypePresets.Custom.FileSystem.Directory.URL)),
    },
    [CodeName.Custom.FileSystem.Directory.URL.Unexpected]: {
        Code: 202199,
        Message: ((_, __) => MessagePresets.Full.Any.Unexpected(_, ParameterTypePresets.Custom.FileSystem.Directory.URL, __)),
    },
    [CodeName.Custom.FileSystem.Directory.DoesntExist]: {
        Code: 202299,
        Message: ((_) => MessagePresets.Full.Custom.FileSystem.Directory.DoesntExist(_)),
    },
    [CodeName.Custom.Color.HEX.Invalid]: {
        Code: 203000,
        Message: ((_) => MessagePresets.Full.Any.Invalid(_, ParameterTypePresets.Custom.Color.HEX)),
    },
    [CodeName.Custom.Color.HEX.Unexpected]: {
        Code: 203099,
        Message: ((_, __) => MessagePresets.Full.Any.Unexpected(_, ParameterTypePresets.Custom.Color.HEX, __)),
    },
    [CodeName.Custom.Color.RGB.Invalid]: {
        Code: 203100,
        Message: ((_) => MessagePresets.Full.Any.Invalid(_, ParameterTypePresets.Custom.Color.RGB)),
    },
    [CodeName.Custom.Color.RGB.Unexpected]: {
        Code: 203199,
        Message: ((_, __) => MessagePresets.Full.Any.Unexpected(_, ParameterTypePresets.Custom.Color.RGB, __)),
    },
    [CodeName.Custom.Color.RGBA.Invalid]: {
        Code: 203200,
        Message: ((_) => MessagePresets.Full.Any.Invalid(_, ParameterTypePresets.Custom.Color.RGBA)),
    },
    [CodeName.Custom.Color.RGBA.Unexpected]: {
        Code: 203299,
        Message: ((_, __) => MessagePresets.Full.Any.Unexpected(_, ParameterTypePresets.Custom.Color.RGBA, __)),
    },
    [CodeName.Custom.URL.Base.Invalid]: {
        Code: 204100,
        Message: ((_) => MessagePresets.Full.Any.Invalid(_, ParameterTypePresets.Custom.URL.Base)),
    },
    [CodeName.Custom.URL.Base.Unexpected]: {
        Code: 204199,
        Message: ((_, __) => MessagePresets.Full.Any.Unexpected(_, ParameterTypePresets.Custom.URL.Base, __)),
    },
};
class TypeError extends GlobalModule.Classes.Error.StrictError {
    // TODO: JSDoc
    static Code = CodeName;
    // TODO: JSDoc
    constructor(codeName, ...parameters) {
        const Validator = GlobalModule.Classes.Validator;
        Validator.Strict(codeName, new Validator().Default.Symbol().Required().Or(new Validator().Default.String().Required()).Or(new Validator().Default.Numeric().Number().Required()));
        const Tag = `TypeError`;
        const Color = {
            Tag: GlobalModule.Functions.Parameter.Type.Manager.Custom.Color.HEXToRGB(GlobalModule.DataSet.Constants.Custom.Color.HEX.Default.Red.Default.Light[20]),
            Code: {
                Name: GlobalModule.Functions.Parameter.Type.Manager.Custom.Color.HEXToRGB(GlobalModule.DataSet.Constants.Custom.Color.HEX.Default.Red.Default.Light[20]),
            },
        };
        super(Tag, Color.Tag, MessageConstructor, codeName, Color.Code.Name, ...parameters);
        this._StackTrace.Depth += 1;
    }
}
export default TypeError;
//# sourceMappingURL=TypeError.js.map