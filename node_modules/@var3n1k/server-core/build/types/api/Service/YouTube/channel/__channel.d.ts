/// <reference types="yt-search" />
import * as Dependencies from '../__dependencies.js';
export type YTDLCoreBasicChannelInfo = Dependencies.YTDLCore.Author;
export type YTDLCoreChannelInfo = Dependencies.YTDLCore.Author;
export type YTSearchChannelInfo = Dependencies.YTSearch.Author;
export type YTChannelInfo = Awaited<ReturnType<typeof Dependencies.YTChannelInfo.getChannelInfo>>;
export type YTSRChannelInfo = Dependencies.YTSR.Channel;
export type SearchByIDQueryResults = [YTDLCoreBasicChannelInfo | undefined, YTDLCoreChannelInfo | undefined, YTSearchChannelInfo | undefined, YTChannelInfo | undefined];
export type SearchByTitleQueryResults = [YTSRChannelInfo | undefined];
interface IYouTubeChannel {
    readonly ID: string;
    readonly URL: string;
    readonly Name: string;
    readonly User: {
        readonly URL: string;
        readonly Name: string;
    };
    readonly Subscribers: number;
    readonly Thumbnails: Array<{
        readonly URL: string;
        readonly Size: {
            readonly Width: number;
            readonly Height: number;
        };
    }>;
    readonly Settings: {
        readonly IsVerified: boolean;
    };
}
export default class YouTubeChannel {
    readonly ID: IYouTubeChannel['ID'];
    readonly URL: IYouTubeChannel['URL'];
    readonly Name: IYouTubeChannel['Name'];
    readonly User: {
        readonly URL: IYouTubeChannel['User']['URL'];
        readonly Name: IYouTubeChannel['User']['Name'];
    };
    readonly Subscribers: IYouTubeChannel['Subscribers'];
    readonly Thumbnails: IYouTubeChannel['Thumbnails'];
    readonly Settings: {
        readonly IsVerified: IYouTubeChannel['Settings']['IsVerified'];
    };
    constructor(searchByIDQueryResults: SearchByIDQueryResults, searchByTitleQueryResults: SearchByTitleQueryResults);
    private static __FormStructure;
    private static __FormChannelCredentials;
}
export {};
//# sourceMappingURL=__channel.d.ts.map