import * as GlobalModule from '../@module.js';
declare const JustifyType: {
    readonly Left: "left";
    readonly Center: "center";
    readonly Right: "right";
};
interface ITableRowCell {
    readonly Width: number;
    readonly Padding: {
        readonly Top: number;
        readonly Left: number;
        readonly Bottom: number;
        readonly Right: number;
    };
    readonly JustifyType: (typeof JustifyType)[keyof typeof JustifyType];
    readonly Content: {
        readonly Text: string;
        readonly Color: {
            readonly Entity: GlobalModule.Types.Color.RGB | undefined;
            readonly Background: GlobalModule.Types.Color.RGB | undefined;
        };
    };
}
interface ITableRow {
    readonly FootNote: {
        readonly Left: {
            readonly Text: string;
            readonly Color: {
                readonly Entity: GlobalModule.Types.Color.RGB | undefined;
                readonly Background: GlobalModule.Types.Color.RGB | undefined;
            };
        };
        readonly Right: {
            readonly Text: string;
            readonly Color: {
                readonly Entity: GlobalModule.Types.Color.RGB | undefined;
                readonly Background: GlobalModule.Types.Color.RGB | undefined;
            };
        };
    };
    readonly Cells: Array<ITableRowCell>;
}
interface ITableBorders {
    readonly Sign: {
        readonly Vertical: {
            readonly Double: boolean;
        };
        readonly Horizontal: {
            readonly Double: boolean;
        };
    };
    readonly Visible: boolean;
    readonly Color: {
        readonly Entity: GlobalModule.Types.Color.RGB | undefined;
        readonly Background: GlobalModule.Types.Color.RGB | undefined;
    };
}
declare function Table(margin: number, borders: ITableBorders, rows: Array<ITableRow>): string;
declare namespace Table {
    var Row: {
        readonly Cell: {
            readonly Justify: {
                readonly Type: {
                    readonly Left: "left";
                    readonly Center: "center";
                    readonly Right: "right";
                };
            };
        };
    };
}
export default Table;
//# sourceMappingURL=Table.d.ts.map