import * as GlobalModule from '../../@module.js';
interface IErrorStackTrace {
    Depth: number;
    readonly List: {
        readonly Inheritted: Array<string>;
    };
}
export default class BaseError extends globalThis.Error {
    private static readonly Pattern;
    readonly Tag: string;
    readonly TagColor: GlobalModule.Types.Color.RGB;
    readonly Code: number;
    readonly CodeName: string;
    readonly CodeNameColor: GlobalModule.Types.Color.RGB;
    readonly Message: Array<any>;
    protected readonly _StackTrace: IErrorStackTrace;
    static get CurrentStackTrace(): Array<string>;
    static GetCauseTraceFromFile(absoluteFilePath: string, line: number, column: number, traceSize: number): string;
    FormOutput(): Array<any>;
    constructor(tag: string | undefined, tagColor: GlobalModule.Types.Color.RGB, code: number | undefined, codeName: string | undefined, codeNameColor: GlobalModule.Types.Color.RGB, inherittedStackTrace: string | undefined, message: Array<any>);
    private static __GetCauseTraceFromFile;
    private static __FormStackTraceRows;
    private __FormMessageOutput;
    private __FormStackTraceOutput;
    private __FormCauseTraceOutput;
    private __FormOutput;
}
export {};
//# sourceMappingURL=BaseError.d.ts.map